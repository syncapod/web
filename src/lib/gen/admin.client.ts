// @generated by protobuf-ts 2.2.1 with parameter long_type_string,generate_dependencies
// @generated from protobuf file "admin.proto" (package "protos", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Admin } from "./admin";
import type { SearchPodRes } from "./admin";
import type { SearchPodReq } from "./admin";
import type { RefPodRes } from "./admin";
import type { RefPodReq } from "./admin";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { AddPodRes } from "./admin";
import type { AddPodReq } from "./admin";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service protos.Admin
 */
export interface IAdminClient {
    /**
     * Podcasts
     *
     * @generated from protobuf rpc: AddPodcast(protos.AddPodReq) returns (protos.AddPodRes);
     */
    addPodcast(input: AddPodReq, options?: RpcOptions): UnaryCall<AddPodReq, AddPodRes>;
    /**
     * @generated from protobuf rpc: RefreshPodcast(protos.RefPodReq) returns (protos.RefPodRes);
     */
    refreshPodcast(input: RefPodReq, options?: RpcOptions): UnaryCall<RefPodReq, RefPodRes>;
    /**
     * @generated from protobuf rpc: SearchPodcasts(protos.SearchPodReq) returns (protos.SearchPodRes);
     */
    searchPodcasts(input: SearchPodReq, options?: RpcOptions): UnaryCall<SearchPodReq, SearchPodRes>;
}
/**
 * @generated from protobuf service protos.Admin
 */
export class AdminClient implements IAdminClient, ServiceInfo {
    typeName = Admin.typeName;
    methods = Admin.methods;
    options = Admin.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Podcasts
     *
     * @generated from protobuf rpc: AddPodcast(protos.AddPodReq) returns (protos.AddPodRes);
     */
    addPodcast(input: AddPodReq, options?: RpcOptions): UnaryCall<AddPodReq, AddPodRes> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddPodReq, AddPodRes>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RefreshPodcast(protos.RefPodReq) returns (protos.RefPodRes);
     */
    refreshPodcast(input: RefPodReq, options?: RpcOptions): UnaryCall<RefPodReq, RefPodRes> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<RefPodReq, RefPodRes>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SearchPodcasts(protos.SearchPodReq) returns (protos.SearchPodRes);
     */
    searchPodcasts(input: SearchPodReq, options?: RpcOptions): UnaryCall<SearchPodReq, SearchPodRes> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SearchPodReq, SearchPodRes>("unary", this._transport, method, opt, input);
    }
}
